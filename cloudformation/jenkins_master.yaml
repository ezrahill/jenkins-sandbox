AWSTemplateFormatVersion: "2010-09-09"
Description: AWS CloudFormation Jenkins Template to create a Stand Alone Jenkins server stack using a single EC2 instance
Parameters:
  VpcId:
    Description: VPC ID that this stack will be launched in.
    Type: AWS::EC2::VPC::Id
    AllowedPattern: "[a-z0-9-]*"
  SubnetId:
    Description: VPC Subnet that this stack will be launched in.
    Type: AWS::EC2::Subnet::Id
    AllowedPattern: "[a-z0-9-]*"
  SSHLocation:
    Description: The source IP address (/32) or source IP address range (x.x.x.x/x) that will be allowed to SSH to the EC2 instances
    Type: String
    MinLength: 9
    MaxLength: 18
    Default: 0.0.0.0/0
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    ConstraintDescription: Must be a valid IP CIDR range of the form x.x.x.x/x
  JenkinsPort:
    Description: The Port that will be used to access Jenkins (Must be port 1024 or above, unless changing jenkins user).
    Type: Number
    MinValue: 1024
    MaxValue: 65535
    Default: 8080
  InstanceTagName:
    Description: Instance Name tag that will be used to define the Name of the instance resource(s)
    Type: String
    Default: Jenkins
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/al2023-ami-minimal-kernel-default-x86_64'

Resources:
  JenkinsKeyPair:
    Type: AWS::EC2::KeyPair
    Properties: 
      KeyName: Jenkins

  JenkinsInstance:
    Description: Jenkins Standalone EC2 Instance running Java 8, and Jenkins.
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        # configSets is used when there are multiple configs that you want to run, for multiple instances. If not needed then just config (default) is adequate.
        configSets:
          default: [mountVolume, config, jenkinsConfig]
        # This configSet will define how we handle the additional EBS volume that we create with the Instance. We will mount the volume in /var/lib/Jenkins
        mountVolume:
          commands:
            01_mkdir:
              command: sudo mkdir -p /var/lib/jenkins
            02_fdisk:
              command: echo -e "o\nn\np\n1\n\n\nw" | sudo fdisk /dev/sdb
            03_wait:
              command: sleep 3
            04_mkfs:
              command: sudo mkfs.ext4 /dev/sdb1
            05_disk_label:
              command: sudo e2label /dev/sdb1 JENKINS
            06_fstab:
              command: echo -e "LABEL=JENKINS     /var/lib/jenkins    ext4   defaults 0 0" | sudo tee -a /etc/fstab
            07_mount:
              command: sudo mount -a

        # This configSet will perform the actual installation of Jenkins
        jenkinsConfig:
          packages:
            yum:
              wget: []
              #java-1.8.0-openjdk: []
              #java-1.8.0-openjdk-devel: []
              net-tools: []
              git: []
              jq: []
          commands:
            01_jenkins_repo:
              command: sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo
            02_jenkins_key:
              command: sudo rpm --import https://jenkins-ci.org/redhat/jenkins.io.key
            03_jenkins_dirs:
              command: sudo mkdir -p /home/jenkins /var/lib/jenkins/.ssh /var/cache/jenkins/war /var/log/jenkins
            04_jenkins_install:
              command: sudo yum install -y jenkins
            05_check_jenkins_login:
              command: sudo usermod -s /bin/bash jenkins
            06_set_jenkins_port:
              command: !Sub |
                sudo sed -i "s/JENKINS_PORT=\"\"/JENKINS_PORT=\"${JenkinsPort}\"/g" /etc/sysconfig/jenkins
            07_sshconfig:
              command: echo -e "Host *\n\tStrictHostKeyChecking no\n" | sudo tee -a /var/lib/jenkins/.ssh/config
            08_ssh_keygen:
              command: sudo ssh-keygen -t rsa -b 2048 -C jenkins@jenkins -N "" -f /var/lib/jenkins/.ssh/id_rsa; sudo cat /var/lib/jenkins/.ssh/id_rsa.pub > /var/lib/jenkins/.ssh/authorized_keys
            09_set_permissions:
              command: sudo chown -R jenkins:jenkins /home/jenkins /var/lib/jenkins /var/cache/jenkins /var/log/jenkins; sudo chmod -R 0600 /var/lib/jenkins/.ssh/; sudo chmod 0700 /var/lib/jenkins/.ssh
            10_firewall:
              command: !Sub |
                sudo firewall-cmd --permanent --add-service=ssh; sudo firewall-cmd --permanent --add-port='${JenkinsPort}'/tcp; sudo firewall-cmd --reload
            11_jenkins_secrets:
              command: !Sub |
                JenkinsPWD="/var/lib/jenkins/secrets/initialAdminPassword"
                PrvKey="/var/lib/jenkins/.ssh/id_rsa"
                PubKey="/var/lib/jenkins/.ssh/id_rsa.pub"
                sudo aws ssm put-parameter --region us-east-1 --name /jenkins/initialAdminPassword --value file://$JenkinsPWD --type String --overwrite
                sudo aws ssm put-parameter --region us-east-1 --name /jenkins/SSH-Git-PrivateKey --value file://$PrvKey --type String --overwrite
                sudo aws ssm put-parameter --region us-east-1 --name /jenkins/SSH-Git-PublicKey --value file://$PubKey --type String --overwrite
          services:
            sysvinit:
              jenkins:
                enabled: true
                ensureRunning: true

        # Default Config, which handles installing the firewall, and CFN components to talk back to CloudFormation
        config:
          packages:
            yum:
              firewalld: []
          #commands:
            #01_update:
              #command: yum -y update
          files:
            '/etc/cfn/cfn-hup.conf':
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                interval=1
              mode: '000400'
              owner: root
              group: root
            '/etc/cfn/hooks.d/cfn-auto-reloader.conf':
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.JenkinsInstance.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init --verbose --stack=${AWS::StackName} --region=${AWS::Region} --resource=JenkinsInstance
                runas=root
          services:
            sysvinit:
              cfn-hup:
                enabled: true
                ensureRunning: true
                files:
                  - '/etc/cfn/cfn-hup.conf'
                  - '/etc/cfn/hooks.d/cfn-auto-reloader.conf'
              firewalld:
                enabled: true
                ensureRunning: true

    Properties:
      BlockDeviceMappings:
        - DeviceName: /dev/sdb
          Ebs:
            DeleteOnTermination: false
            VolumeType: gp2
            VolumeSize: 25
      ImageId: !Ref LatestAmiId
      InstanceType: 't2.micro'
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          DeleteOnTermination: true
          SubnetId: !Ref SubnetId
          GroupSet:
            - !Ref ServerSecurityGroup
      KeyName: !Ref JenkinsKeyPair
      Tags:
        - Key: Name
          Value: !Ref InstanceTagName
      UserData:
        Fn::Base64: !Sub |     # No more Fn::Join needed
          #!/bin/bash -x
          yum update -y
          amazon-linux-extras install java-openjdk11 -y
          /opt/aws/bin/cfn-init -v --stack ${AWS::StackName} --resource JenkinsInstance --region ${AWS::Region}
          /opt/aws/bin/cfn-signal -e $? --region ${AWS::Region} --stack ${AWS::StackName} --resource JenkinsInstance
    CreationPolicy:
      ResourceSignal:
        Count: '1'
        Timeout: PT15M

  ServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group that will be used for the Jenkins instance. Open ports 22, and the JenkinsPort
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SSHLocation
        - IpProtocol: tcp
          FromPort: !Ref JenkinsPort
          ToPort: !Ref JenkinsPort
          CidrIp: !Ref SSHLocation

Outputs:
  TemplateID:
    Description: 'Jenkins Single Server Template'
    Value: 'Jenkins Single Server Template'
  PublicIp:
    Description: 'The Public IP address of the EC2 Instance'
    Value: !GetAtt JenkinsInstance.PublicIp
  ServerAddress:
    Description: 'The public DNS address for this instance'
    Value: !GetAtt JenkinsInstance.PublicDnsName
  JenkinsPass:
    Description: Jenkins One Time Install Password
    Value: !Sub "ssh ec2-user@${JenkinsInstance.PublicIp} sudo cat /var/lib/jenkins/secrets/initialAdminPassword"
  JenkinsKey:
    Description: Jenkins SSH Public Key
    Value: !Sub "ssh ec2-user@${JenkinsInstance.PublicIp} sudo cat /var/lib/jenkins/.ssh/id_rsa.pub"
  InstanceID:
    Description: 'The ID of the Jenkins instance that was launched'
    Value: !Ref JenkinsInstance